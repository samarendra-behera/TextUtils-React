{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Mode","href","title","type","id","role","onClick","toggleMode","htmlFor","modeName","TextForm","useState","text","setText","email","setEmail","handelOnChange","event","target","value","style","color","heading","onChange","rows","backgroundColor","disabled","length","t1","toUpperCase","showAlert","t2","toLowerCase","match","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newText","split","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setModeName","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.99d05cf6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.Mode ===\"light\"?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n            <label className=\"form-check-label mx-2\" htmlFor=\"flexSwitchCheckDefault\">{props.modeName}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\")\r\n    const handelOnChange = (event)=>{\r\n        // console.log('On Change');\r\n        setText(event.target.value);\r\n    }\r\n    const handelUpClick = ()=>{\r\n        // console.log('upper Case was Clicked');\r\n        let t1=text.toUpperCase();\r\n        setText(t1);\r\n        props.showAlert('converted to upperercase!','success');\r\n    }\r\n    const handelLoClick = ()=>{\r\n        let t2 = text.toLowerCase();\r\n        setText(t2);\r\n        props.showAlert('converted to lowercase!','success');\r\n    }\r\n    const handelClear = ()=>{\r\n        let t2 =\"\"\r\n        setText(t2);\r\n        props.showAlert('Clear texts','success');\r\n    }\r\n    const emailExtracter = ()=>{\r\n        let email= text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi);\r\n        // console.log(email);\r\n        if(email == null){\r\n            setEmail(\"\");\r\n        }else{\r\n            \r\n            setEmail(email.join(\"\\n\"));\r\n        }\r\n        props.showAlert('Extract all emails','success');\r\n    }\r\n    const handelCopy = ()=>{\r\n        const text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert('copied!','success');\r\n    }\r\n    const handelExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert('extra spaces are removed','success');\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\" style={{color:props.Mode===\"dark\" ?'white':'black'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handelOnChange} id=\"myBox\" rows=\"8\" style={{backgroundColor:props.Mode===\"dark\" ?'#79a196':'white',color:props.Mode===\"dark\" ?'white':'black'}}></textarea>\r\n            </div>\r\n            <button disabled = {text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handelUpClick}>Convert to UpperCase</button>\r\n            <button disabled = {text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handelLoClick}>Convert to LowerCase</button>\r\n            <button disabled = {text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handelClear}>Clear text</button>\r\n            <button disabled = {text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={emailExtracter}>Email extract</button>\r\n            <button disabled = {text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handelCopy}>Copy text</button>\r\n            <button disabled = {text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handelExtraSpace}>Remove ExtraSpace</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.Mode===\"dark\" ?'white':'black'}}>\r\n            <h2>\r\n                Your Text summary\r\n            </h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} wards and {text.length} characters</p>\r\n            <p>{0.008 *text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.Mode===\"dark\" ?'white':'black'}}>\r\n            <h3>All Extracted emails are :</h3>\r\n            <div className=\"mb-3\" >\r\n                <textarea className=\"form-control\" value={email} onChange={handelOnChange} id=\"mailBox\" rows=\"8\" style={{backgroundColor:props.Mode===\"dark\" ?'#79a196':'white',color:props.Mode===\"dark\" ?'white':'black'}} ></textarea>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [modeName, setModeName] = useState('Light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n\n    }, 1500);\n\n  }\n  const toggleMode = () => {\n    if (Mode === \"light\") {\n      setMode('dark');\n      setModeName('Dark')\n      document.body.style.backgroundColor = 'gray';\n      showAlert('Dark mode has been enabled', \"success\");\n      document.title = \"TextUtils - Dark mode\";\n    }\n    else {\n      setMode('light');\n      setModeName('Light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', \"success\");\n      document.title = \"TextUtils - Light mode\";\n    }\n  }\n  return (\n    <>\n      {/* <Router>\n        <Navbar title=\"TextUtils\" aboutText=\"About UtilText\" Mode={Mode} toggleMode={toggleMode} modeName={modeName} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route exact path='/about' element={<About Mode={Mode}/>} />\n            <Route exact path='/' element={<TextForm heading=\"Try TextUtils - Word Counter, Character Counter, Remove extra space, Email Extracter\" Mode={Mode} showAlert={showAlert} />} />\n          </Routes>\n        </div>\n      </Router> */}\n      \n        <Navbar title=\"TextUtils\" aboutText=\"About UtilText\" Mode={Mode} toggleMode={toggleMode} modeName={modeName} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <TextForm heading=\"Try TextUtils - Word Counter, Character Counter, Remove extra space, Email Extracter\" Mode={Mode} showAlert={showAlert} />\n        </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}